<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{D0CB0454-2A69-4A3A-A56F-987E5F216BFC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Integration</RootNamespace>
    <AssemblyName>Integration.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="FluentAssertions, Version=4.3.2.0, Culture=neutral, PublicKeyToken=33f2691a05b67b6a, processorArchitecture=MSIL">
      <HintPath>..\packages\FluentAssertions.4.3.2\lib\net45\FluentAssertions.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="FluentAssertions.Core, Version=4.3.2.0, Culture=neutral, PublicKeyToken=33f2691a05b67b6a, processorArchitecture=MSIL">
      <HintPath>..\packages\FluentAssertions.4.3.2\lib\net45\FluentAssertions.Core.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Moq, Version=4.2.1510.2205, Culture=neutral, PublicKeyToken=69f491c39445e920, processorArchitecture=MSIL">
      <HintPath>..\packages\Moq.4.2.1510.2205\lib\net40\Moq.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="Ninject, Version=3.0.0.0, Culture=neutral, PublicKeyToken=c7192dc5380945e7, processorArchitecture=MSIL">
      <HintPath>..\packages\Portable.Ninject.3.3.1\lib\net40-client\Ninject.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="StaticProxy.Interceptor, Version=0.1.0.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\StaticProxy.Interceptor.0.3.1.0\lib\portable-net45+win+wpa81+wp80+MonoAndroid10+xamarinios10+MonoTouch10\StaticProxy.Interceptor.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="xunit.abstractions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.abstractions.2.0.0\lib\net35\xunit.abstractions.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.assert, Version=2.1.0.3179, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.assert.2.1.0\lib\dotnet\xunit.assert.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.core, Version=2.1.0.3179, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.extensibility.core.2.1.0\lib\dotnet\xunit.core.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="xunit.execution.desktop, Version=2.1.0.3179, Culture=neutral, PublicKeyToken=8d05b1bb7a6fdb6c, processorArchitecture=MSIL">
      <HintPath>..\packages\xunit.extensibility.execution.2.1.0\lib\net45\xunit.execution.desktop.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ClassProxy\ForwardToMockInterceptor.cs" />
    <Compile Include="ClassProxy\When_class_is_not_bound_correctly.cs" />
    <Compile Include="Factory\Constraints\Parameterised\When_calling_factory_method_with_name_by_parameter_constraint.cs" />
    <Compile Include="Factory\Constraints\Constant\When_calling_factory_method_with_named_constraint.cs" />
    <Compile Include="Factory\Constraints\When_calling_factory_method_with_multiple_constraints.cs" />
    <Compile Include="Factory\ResolutionParameters\When_calling_factory_method_that_has_type_matching_constructor_argument.cs" />
    <Compile Include="Factory\When_binding_class_to_proxy.cs" />
    <Compile Include="Factory\ResolutionParameters\When_calling_factory_method_that_has_name_matching_constructor_argument.cs" />
    <Compile Include="Factory\When_calling_factory_method_that_has_no_arguments.cs" />
    <Compile Include="Factory\When_calling_factory_method_that_returns_void.cs" />
    <Compile Include="Factory\ReturnTypeSpecification\When_calling_factory_method_that_specifies_type_to_request_from_container.cs" />
    <Compile Include="Factory\When_calling_factory_method_which_has_unattributed_parameter.cs" />
    <Compile Include="InterfaceProxy\When_there_are_multiple_interceptors.cs" />
    <Compile Include="TraceInterceptor.cs" />
    <Compile Include="InterfaceProxy\When_there_is_no_interceptor.cs" />
    <Compile Include="InterfaceProxy\When_there_is_no_proxy_implementation_for_interface.cs" />
    <Compile Include="InterfaceProxy\When_there_is_one_interceptor.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="ClassProxy\When_binding_interface_to_implementation.cs" />
    <Compile Include="ClassProxy\When_binding_to_self.cs" />
    <Compile Include="ClassProxy\When_there_are_multiple_interceptors_for_proxy.cs" />
    <Compile Include="ClassProxy\When_there_is_no_interceptor_for_proxy.cs" />
    <Compile Include="ClassProxy\When_there_is_one_interceptor_for_proxy.cs" />
    <Compile Include="Reflector.cs" />
    <Compile Include="When_interceptor_is_null.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Integration\Integration.csproj">
      <Project>{c173914c-a263-429d-b8f1-564ff48e2483}</Project>
      <Name>Integration</Name>
    </ProjectReference>
    <ProjectReference Include="..\ninject.extensions.staticproxy\ninject.extensions.staticproxy.csproj">
      <Project>{6fcbbbfe-3ce4-48e4-ba99-075a5dcdaa12}</Project>
      <Name>ninject.extensions.staticproxy</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>